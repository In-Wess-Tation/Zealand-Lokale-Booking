// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Case_2___Zealand_Lokale_Booking.Models;

public partial class BookngServiceContext : DbContext
{
    public BookngServiceContext()
    {
    }

    public BookngServiceContext(DbContextOptions<BookngServiceContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Booking> Bookings { get; set; }

    public virtual DbSet<Brugere> Brugeres { get; set; }

    public virtual DbSet<Dag> Dags { get; set; }

    public virtual DbSet<Lokale> Lokales { get; set; }

    public virtual DbSet<Lokation> Lokations { get; set; }

    public virtual DbSet<LokationsAdresse> LokationsAdresses { get; set; }

    public virtual DbSet<Tid> Tids { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=mssql16.unoeuro.com;Initial Catalog=mangoscave_dk_db_zealand;User ID=mangoscave_dk;Password=kt6mryFGgep9DhHRAwn5");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Booking>(entity =>
        {
            entity.HasKey(e => e.BookingId).HasName("PK__Booking__73951ACD17A74BF0");

            entity.HasOne(d => d.Bruger).WithMany(p => p.Bookings)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Booking_BrugerID");

            entity.HasOne(d => d.Dag).WithMany(p => p.Bookings)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Booking_Dag");

            entity.HasOne(d => d.Lokale).WithMany(p => p.Bookings)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Booking_Lokale");

            entity.HasOne(d => d.Lokation).WithMany(p => p.Bookings)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Booking_Lokation");

            entity.HasOne(d => d.Tid).WithMany(p => p.Bookings)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Booking_Tid");
        });

        modelBuilder.Entity<Brugere>(entity =>
        {
            entity.HasKey(e => e.BrugerId).HasName("PK__Brugere__6FA2FB306457C7F4");
        });

        modelBuilder.Entity<Dag>(entity =>
        {
            entity.HasKey(e => e.DagId).HasName("PK__Dag__A4B4784880D2626B");
        });

        modelBuilder.Entity<Lokale>(entity =>
        {
            entity.HasKey(e => e.LokaleId).HasName("PK__Lokale__1C77899241463BB5");

            entity.HasOne(d => d.Lokations).WithMany(p => p.Lokales)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Lokale_Lokation");
        });

        modelBuilder.Entity<Lokation>(entity =>
        {
            entity.HasKey(e => e.LokationId).HasName("PK__Lokation__C799CC0A2DB93852");

            entity.HasOne(d => d.AdresseNavigation).WithMany(p => p.Lokations)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Lokation_LokationsAdresse");
        });

        modelBuilder.Entity<LokationsAdresse>(entity =>
        {
            entity.HasKey(e => e.Adresse).HasName("PK__Lokation__DA749F1A9469297B");
        });

        modelBuilder.Entity<Tid>(entity =>
        {
            entity.HasKey(e => e.TidId).HasName("PK__Tid__38988849B6EA0546");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}